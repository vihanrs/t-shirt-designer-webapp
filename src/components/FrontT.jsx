/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/3Dmodels/front.glb -o src/components/FrontT.jsx -r public 
*/
import { Center, Decal, useGLTF, useTexture } from "@react-three/drei";
import { useEffect, useRef } from "react";

export function FrontT({ tshirtColor, designTexture, onViewChange }) {
  const texture = useTexture(designTexture || "/2.webp");
  const { nodes, materials } = useGLTF("/3Dmodels/front.glb");
  const meshRef = useRef();

  useEffect(() => {
    if (meshRef.current) {
      meshRef.current.material.color.set(tshirtColor); // âœ… Dynamically update color
    }
  }, [tshirtColor]);

  const handleClick = (view) => {
    onViewChange(view);
  };

  return (
    <Center>
      <group dispose={null}>
        <mesh
          geometry={nodes.Object_6.geometry}
          material={materials.material_1}
          scale={0.09}
          position={[0, -1, 5]}
          ref={meshRef}
          onClick={() => handleClick("back")}
        />
        <mesh
          geometry={nodes.Object_0_1.geometry}
          scale={0.09}
          position={[0, -1, 5]}
        >
          <meshBasicMaterial transparent opacity={0} />
          {/* Adjusted to non-transparent */}
          <Decal
            // debug // Makes "bounding box" of the decal visible
            position={[0, 30, 15]} //{pos} // Position of the decal
            rotation={[0, 0, 0]} // Rotation of the decal (can be a vector or a degree in radians)
            scale={[65, 65, 35]} //{scale} // Scale of the decal
            onClick={() => handleClick("front")}
          >
            <meshStandardMaterial
              map={texture}
              toneMapped={false}
              transparent
              polygonOffset
              polygonOffsetFactor={-1} // The mesh should take precedence over the original
            />
          </Decal>
        </mesh>
      </group>
    </Center>
  );
}

useGLTF.preload("/3Dmodels/front.glb");
